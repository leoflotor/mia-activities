branch(positive, [top-left/b, _, _, _, middle-middle/b, _, _, _, bottom-right/x]).
branch(negative, [top-left/b, _, _, _, middle-middle/b, _, _, _, bottom-right/o]).
branch(negative, [top-left/o, _, _, _, middle-middle/b, _, _, _, bottom-right/o]).
branch(negative, [top-left/o, _, _, _, middle-middle/b, _, _, _, bottom-right/b]).
branch(positive, [top-left/o, _, top-right/b, _, middle-middle/b, _, bottom-left/x, _, bottom-right/x]).
branch(negative, [top-left/o, _, top-right/b, _, middle-middle/b, _, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/b, top-right/o, _, middle-middle/b, _, _, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, top-right/o, _, middle-middle/b, _, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, top-right/o, _, middle-middle/b, _, bottom-left/x, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/o, top-right/o, _, middle-middle/b, _, _, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/b, middle-right/x, _, _, bottom-right/x]).
branch(negative, [top-left/o, _, top-right/x, _, middle-middle/b, middle-right/o, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/b, middle-right/o, bottom-left/x, _, bottom-right/x]).
branch(negative, [top-left/o, _, top-right/x, _, middle-middle/b, middle-right/b, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/b, middle-right/b, bottom-left/x, _, bottom-right/x]).
branch(positive, [top-left/x, _, _, _, middle-middle/b, _, _, _, bottom-right/x]).
branch(positive, [top-left/x, _, _, _, middle-middle/b, _, _, _, bottom-right/b]).
branch(positive, [top-left/x, _, top-right/b, _, middle-middle/b, _, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/b, _, middle-middle/b, _, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/o, _, middle-middle/b, middle-right/b, _, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/o, _, middle-middle/b, middle-right/x, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/o, _, middle-middle/b, middle-right/x, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/o, _, middle-middle/b, middle-right/o, _, _, bottom-right/o]).
branch(positive, [top-left/x, top-middle/x, top-right/x, _, middle-middle/b, _, _, _, bottom-right/o]).
branch(negative, [top-left/x, top-middle/o, top-right/x, _, middle-middle/b, _, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/x, top-middle/o, top-right/x, _, middle-middle/b, _, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/x, top-middle/b, top-right/x, _, middle-middle/b, _, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/x, top-middle/b, top-right/x, _, middle-middle/b, _, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/b, _, _, _, middle-middle/o, _, _, _, bottom-right/o]).
branch(negative, [top-left/b, _, _, _, middle-middle/o, _, _, _, bottom-right/b]).
branch(positive, [top-left/b, top-middle/b, _, _, middle-middle/o, _, _, bottom-middle/o, bottom-right/x]).
branch(negative, [top-left/b, top-middle/b, _, middle-left/x, middle-middle/o, _, _, bottom-middle/b, bottom-right/x]).
branch(positive, [top-left/b, top-middle/b, _, middle-left/b, middle-middle/o, _, _, bottom-middle/b, bottom-right/x]).
branch(positive, [top-left/b, top-middle/b, _, middle-left/o, middle-middle/o, middle-right/x, _, bottom-middle/b, bottom-right/x]).
branch(negative, [top-left/b, top-middle/b, _, middle-left/o, middle-middle/o, middle-right/o, _, bottom-middle/b, bottom-right/x]).
branch(negative, [top-left/b, top-middle/b, _, _, middle-middle/o, _, bottom-left/b, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/b, top-middle/b, _, _, middle-middle/o, _, bottom-left/x, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/b, top-middle/b, top-right/x, _, middle-middle/o, _, bottom-left/o, bottom-middle/x, bottom-right/x]).
branch(negative, [top-left/b, top-middle/b, top-right/o, _, middle-middle/o, _, bottom-left/o, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/b, top-middle/o, _, _, middle-middle/o, _, _, bottom-middle/b, bottom-right/x]).
branch(positive, [top-left/b, top-middle/o, top-right/x, _, middle-middle/o, _, bottom-left/o, bottom-middle/x, bottom-right/x]).
branch(negative, [top-left/b, top-middle/o, top-right/o, _, middle-middle/o, _, bottom-left/o, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/b, top-middle/o, _, _, middle-middle/o, _, bottom-left/x, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/b, top-middle/o, _, _, middle-middle/o, _, bottom-left/b, bottom-middle/x, bottom-right/x]).
branch(negative, [top-left/b, top-middle/o, _, _, middle-middle/o, _, _, bottom-middle/o, bottom-right/x]).
branch(negative, [top-left/b, top-middle/x, _, middle-left/x, middle-middle/o, _, _, _, bottom-right/x]).
branch(negative, [top-left/b, top-middle/x, _, middle-left/b, middle-middle/o, middle-right/b, _, _, bottom-right/x]).
branch(positive, [top-left/b, top-middle/x, _, middle-left/b, middle-middle/o, middle-right/o, _, _, bottom-right/x]).
branch(positive, [top-left/b, top-middle/x, top-right/x, middle-left/b, middle-middle/o, middle-right/x, _, _, bottom-right/x]).
branch(negative, [top-left/b, top-middle/x, top-right/o, middle-left/b, middle-middle/o, middle-right/x, _, _, bottom-right/x]).
branch(negative, [top-left/b, top-middle/x, _, middle-left/o, middle-middle/o, middle-right/o, _, _, bottom-right/x]).
branch(positive, [top-left/b, top-middle/x, _, middle-left/o, middle-middle/o, middle-right/b, _, _, bottom-right/x]).
branch(positive, [top-left/b, top-middle/x, top-right/x, middle-left/o, middle-middle/o, middle-right/x, _, _, bottom-right/x]).
branch(negative, [top-left/b, top-middle/x, top-right/o, middle-left/o, middle-middle/o, middle-right/x, _, _, bottom-right/x]).
branch(negative, [top-left/o, _, _, _, middle-middle/o, _, _, _, bottom-right/b]).
branch(negative, [top-left/o, _, _, _, middle-middle/o, _, _, _, bottom-right/o]).
branch(positive, [top-left/o, top-middle/b, top-right/x, _, middle-middle/o, _, _, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/b, top-right/b, _, middle-middle/o, _, _, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/b, top-right/o, _, middle-middle/o, _, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/b, top-right/o, _, middle-middle/o, _, bottom-left/x, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/o, top-right/x, _, middle-middle/o, _, _, bottom-middle/o, bottom-right/x]).
branch(positive, [top-left/o, top-middle/o, top-right/x, _, middle-middle/o, _, _, bottom-middle/b, bottom-right/x]).
branch(positive, [top-left/o, top-middle/o, top-right/x, _, middle-middle/o, _, _, bottom-middle/x, bottom-right/x]).
branch(negative, [top-left/o, top-middle/o, top-right/o, _, middle-middle/o, _, _, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/o, top-right/b, _, middle-middle/o, _, _, bottom-middle/o, bottom-right/x]).
branch(positive, [top-left/o, top-middle/o, top-right/b, _, middle-middle/o, _, _, bottom-middle/x, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, _, _, middle-middle/o, middle-right/o, bottom-left/b, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, _, _, middle-middle/o, middle-right/x, bottom-left/b, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, _, _, middle-middle/o, _, bottom-left/o, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, top-right/x, _, middle-middle/o, _, bottom-left/o, bottom-middle/b, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, top-right/o, _, middle-middle/o, _, bottom-left/o, bottom-middle/b, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, _, _, middle-middle/o, _, bottom-left/o, bottom-middle/o, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, _, _, middle-middle/o, _, bottom-left/x, bottom-middle/b, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, _, _, middle-middle/o, _, bottom-left/x, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, _, middle-left/o, middle-middle/o, _, bottom-left/x, bottom-middle/o, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, _, middle-left/x, middle-middle/o, _, bottom-left/x, bottom-middle/o, bottom-right/x]).
branch(negative, [top-left/x, _, top-right/b, _, middle-middle/o, _, bottom-left/b, _, _]).
branch(negative, [top-left/x, _, top-right/b, _, middle-middle/o, _, bottom-left/o, _, _]).
branch(positive, [top-left/x, _, top-right/b, middle-left/x, middle-middle/o, _, bottom-left/x, _, _]).
branch(negative, [top-left/x, _, top-right/b, middle-left/b, middle-middle/o, _, bottom-left/x, bottom-middle/o, _]).
branch(positive, [top-left/x, _, top-right/b, middle-left/b, middle-middle/o, _, bottom-left/x, bottom-middle/x, _]).
branch(negative, [top-left/x, _, top-right/b, middle-left/o, middle-middle/o, middle-right/x, bottom-left/x, _, _]).
branch(negative, [top-left/x, _, top-right/b, middle-left/o, middle-middle/o, middle-right/o, bottom-left/x, _, _]).
branch(positive, [top-left/x, _, top-right/b, middle-left/o, middle-middle/o, middle-right/b, bottom-left/x, _, _]).
branch(negative, [top-left/x, _, top-right/o, _, middle-middle/o, _, bottom-left/b, _, _]).
branch(negative, [top-left/x, _, top-right/o, _, middle-middle/o, _, bottom-left/o, _, _]).
branch(positive, [top-left/x, _, top-right/o, middle-left/x, middle-middle/o, _, bottom-left/x, _, _]).
branch(negative, [top-left/x, top-middle/x, top-right/o, middle-left/b, middle-middle/o, _, bottom-left/x, _, _]).
branch(positive, [top-left/x, top-middle/b, top-right/o, middle-left/b, middle-middle/o, _, bottom-left/x, _, _]).
branch(positive, [top-left/x, top-middle/o, top-right/o, middle-left/b, middle-middle/o, middle-right/b, bottom-left/x, _, _]).
branch(negative, [top-left/x, top-middle/o, top-right/o, middle-left/b, middle-middle/o, middle-right/x, bottom-left/x, _, _]).
branch(negative, [top-left/x, top-middle/x, top-right/o, middle-left/o, middle-middle/o, _, bottom-left/x, _, _]).
branch(positive, [top-left/x, top-middle/b, top-right/o, middle-left/o, middle-middle/o, _, bottom-left/x, _, _]).
branch(positive, [top-left/x, top-middle/o, top-right/o, middle-left/o, middle-middle/o, _, bottom-left/x, _, _]).
branch(positive, [top-left/x, top-middle/b, top-right/x, middle-left/b, middle-middle/o, _, _, _, _]).
branch(negative, [top-left/x, top-middle/b, top-right/x, middle-left/x, middle-middle/o, _, bottom-left/o, _, _]).
branch(positive, [top-left/x, top-middle/b, top-right/x, middle-left/x, middle-middle/o, _, bottom-left/x, _, _]).
branch(negative, [top-left/x, top-middle/b, top-right/x, middle-left/o, middle-middle/o, middle-right/o, _, _, _]).
branch(positive, [top-left/x, top-middle/b, top-right/x, middle-left/o, middle-middle/o, middle-right/x, _, _, _]).
branch(positive, [top-left/x, top-middle/o, top-right/x, middle-left/b, middle-middle/o, _, _, bottom-middle/b, _]).
branch(positive, [top-left/x, top-middle/o, top-right/x, middle-left/o, middle-middle/o, middle-right/x, _, bottom-middle/b, _]).
branch(negative, [top-left/x, top-middle/o, top-right/x, middle-left/o, middle-middle/o, middle-right/o, _, bottom-middle/b, _]).
branch(positive, [top-left/x, top-middle/o, top-right/x, middle-left/x, middle-middle/o, _, _, bottom-middle/b, _]).
branch(negative, [top-left/x, top-middle/o, top-right/x, _, middle-middle/o, _, _, bottom-middle/o, _]).
branch(negative, [top-left/x, top-middle/o, top-right/x, _, middle-middle/o, _, bottom-left/b, bottom-middle/x, _]).
branch(positive, [top-left/x, top-middle/o, top-right/x, middle-left/o, middle-middle/o, _, bottom-left/o, bottom-middle/x, _]).
branch(negative, [top-left/x, top-middle/o, top-right/x, middle-left/x, middle-middle/o, _, bottom-left/o, bottom-middle/x, _]).
branch(positive, [top-left/x, top-middle/o, top-right/x, middle-left/x, middle-middle/o, _, bottom-left/x, bottom-middle/x, _]).
branch(negative, [top-left/x, top-middle/o, top-right/x, middle-left/o, middle-middle/o, _, bottom-left/x, bottom-middle/x, _]).
branch(positive, [top-left/x, top-middle/x, top-right/x, _, middle-middle/o, _, _, _, _]).
branch(positive, [top-left/b, _, _, _, middle-middle/x, _, _, _, bottom-right/x]).
branch(positive, [top-left/b, _, _, _, middle-middle/x, _, _, _, bottom-right/b]).
branch(positive, [top-left/b, _, _, middle-left/x, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(positive, [top-left/b, _, _, middle-left/o, middle-middle/x, middle-right/x, bottom-left/x, _, bottom-right/o]).
branch(positive, [top-left/b, _, top-right/b, middle-left/o, middle-middle/x, middle-right/x, bottom-left/o, _, bottom-right/o]).
branch(negative, [top-left/b, _, top-right/x, middle-left/o, middle-middle/x, middle-right/x, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/b, _, _, middle-left/o, middle-middle/x, middle-right/x, bottom-left/b, _, bottom-right/o]).
branch(negative, [top-left/b, top-middle/b, _, middle-left/b, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(positive, [top-left/b, top-middle/o, _, middle-left/b, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(positive, [top-left/b, top-middle/x, top-right/o, middle-left/b, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(negative, [top-left/b, top-middle/x, top-right/b, middle-left/b, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(positive, [top-left/b, _, _, _, middle-middle/x, middle-right/b, bottom-left/b, _, bottom-right/o]).
branch(positive, [top-left/b, _, _, _, middle-middle/x, middle-right/b, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/b, _, _, _, middle-middle/x, middle-right/b, bottom-left/o, bottom-middle/o, bottom-right/o]).
branch(positive, [top-left/b, _, _, _, middle-middle/x, middle-right/b, bottom-left/o, bottom-middle/x, bottom-right/o]).
branch(positive, [top-left/b, _, top-right/b, _, middle-middle/x, middle-right/o, _, _, bottom-right/o]).
branch(positive, [top-left/b, _, top-right/x, middle-left/b, middle-middle/x, middle-right/o, bottom-left/o, _, bottom-right/o]).
branch(negative, [top-left/b, _, top-right/x, middle-left/x, middle-middle/x, middle-right/o, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/b, _, top-right/x, _, middle-middle/x, middle-right/o, bottom-left/b, _, bottom-right/o]).
branch(positive, [top-left/b, _, top-right/x, _, middle-middle/x, middle-right/o, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/b, _, top-right/o, _, middle-middle/x, middle-right/o, _, _, bottom-right/o]).
branch(positive, [top-left/o, _, top-right/b, _, middle-middle/x, _, _, _, bottom-right/o]).
branch(negative, [top-left/o, top-middle/x, top-right/o, _, middle-middle/x, middle-right/o, _, _, bottom-right/o]).
branch(positive, [top-left/o, top-middle/x, top-right/o, _, middle-middle/x, middle-right/b, _, _, bottom-right/o]).
branch(positive, [top-left/o, top-middle/x, top-right/o, _, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(negative, [top-left/o, top-middle/o, top-right/o, _, middle-middle/x, _, _, _, bottom-right/o]).
branch(negative, [top-left/o, top-middle/b, top-right/o, _, middle-middle/x, middle-right/o, _, _, bottom-right/o]).
branch(positive, [top-left/o, top-middle/b, top-right/o, _, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/x, _, bottom-left/b, _, bottom-right/o]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/x, _, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/o, _, top-right/x, middle-left/o, middle-middle/x, _, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/o, _, top-right/x, middle-left/b, middle-middle/x, middle-right/b, bottom-left/o, _, bottom-right/o]).
branch(negative, [top-left/o, _, top-right/x, middle-left/b, middle-middle/x, middle-right/x, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/o, _, top-right/x, middle-left/x, middle-middle/x, middle-right/o, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/o, _, top-right/x, middle-left/x, middle-middle/x, middle-right/x, bottom-left/o, _, bottom-right/o]).
branch(negative, [top-left/o, _, top-right/x, middle-left/x, middle-middle/x, middle-right/b, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/o, _, _, middle-left/x, middle-middle/x, middle-right/x, _, _, bottom-right/b]).
branch(positive, [top-left/o, top-middle/b, _, middle-left/x, middle-middle/x, middle-right/o, _, _, bottom-right/b]).
branch(positive, [top-left/o, top-middle/o, top-right/x, middle-left/x, middle-middle/x, middle-right/o, _, _, bottom-right/b]).
branch(negative, [top-left/o, top-middle/o, top-right/o, middle-left/x, middle-middle/x, middle-right/o, _, _, bottom-right/b]).
branch(positive, [top-left/o, top-middle/x, _, middle-left/x, middle-middle/x, middle-right/o, _, _, bottom-right/b]).
branch(negative, [top-left/o, _, _, middle-left/x, middle-middle/x, middle-right/b, bottom-left/b, _, bottom-right/b]).
branch(positive, [top-left/o, _, top-right/x, middle-left/x, middle-middle/x, middle-right/b, bottom-left/x, _, bottom-right/b]).
branch(negative, [top-left/o, _, top-right/o, middle-left/x, middle-middle/x, middle-right/b, bottom-left/x, _, bottom-right/b]).
branch(positive, [top-left/o, _, _, middle-left/x, middle-middle/x, middle-right/b, bottom-left/o, _, bottom-right/b]).
branch(positive, [top-left/o, top-middle/x, _, middle-left/b, middle-middle/x, _, _, _, bottom-right/b]).
branch(positive, [top-left/o, top-middle/b, _, middle-left/b, middle-middle/x, _, _, _, bottom-right/b]).
branch(negative, [top-left/o, top-middle/o, top-right/o, middle-left/b, middle-middle/x, _, _, _, bottom-right/b]).
branch(positive, [top-left/o, top-middle/o, top-right/x, middle-left/b, middle-middle/x, _, _, _, bottom-right/b]).
branch(positive, [top-left/o, _, _, middle-left/o, middle-middle/x, _, bottom-left/b, _, bottom-right/b]).
branch(positive, [top-left/o, _, top-right/b, middle-left/o, middle-middle/x, _, bottom-left/x, _, bottom-right/b]).
branch(positive, [top-left/o, top-middle/x, top-right/o, middle-left/o, middle-middle/x, _, bottom-left/x, _, bottom-right/b]).
branch(negative, [top-left/o, top-middle/o, top-right/o, middle-left/o, middle-middle/x, _, bottom-left/x, _, bottom-right/b]).
branch(positive, [top-left/o, _, top-right/x, middle-left/o, middle-middle/x, _, bottom-left/x, _, bottom-right/b]).
branch(negative, [top-left/o, _, _, middle-left/o, middle-middle/x, _, bottom-left/o, _, bottom-right/b]).
branch(positive, [top-left/o, _, top-right/b, middle-left/b, middle-middle/x, _, _, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/b, middle-left/x, middle-middle/x, _, _, _, bottom-right/x]).
branch(negative, [top-left/o, _, top-right/b, middle-left/o, middle-middle/x, _, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/b, middle-left/o, middle-middle/x, _, bottom-left/x, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/b, middle-left/o, middle-middle/x, _, bottom-left/b, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/o, top-right/o, _, middle-middle/x, _, _, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/b, top-right/o, middle-left/b, middle-middle/x, _, _, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/b, top-right/o, middle-left/o, middle-middle/x, middle-right/b, _, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/b, top-right/o, middle-left/o, middle-middle/x, middle-right/x, _, _, bottom-right/x]).
branch(positive, [top-left/o, top-middle/b, top-right/o, middle-left/x, middle-middle/x, _, _, _, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, top-right/o, _, middle-middle/x, _, _, bottom-middle/b, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, top-right/o, _, middle-middle/x, _, _, bottom-middle/x, bottom-right/x]).
branch(positive, [top-left/o, top-middle/x, top-right/o, _, middle-middle/x, _, bottom-left/o, bottom-middle/o, bottom-right/x]).
branch(negative, [top-left/o, top-middle/x, top-right/o, _, middle-middle/x, _, bottom-left/x, bottom-middle/o, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/x, _, bottom-left/b, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/x, _, bottom-left/x, _, bottom-right/x]).
branch(negative, [top-left/o, _, top-right/x, _, middle-middle/x, middle-right/b, bottom-left/o, _, bottom-right/x]).
branch(negative, [top-left/o, _, top-right/x, _, middle-middle/x, middle-right/o, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/o, _, top-right/x, _, middle-middle/x, middle-right/x, bottom-left/o, _, bottom-right/x]).
branch(positive, [top-left/x, _, _, _, middle-middle/x, _, _, _, bottom-right/b]).
branch(positive, [top-left/x, _, _, _, middle-middle/x, _, _, _, bottom-right/x]).
branch(positive, [top-left/x, _, top-right/b, _, middle-middle/x, _, bottom-left/b, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/b, _, middle-middle/x, _, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/b, _, middle-middle/x, _, bottom-left/o, bottom-middle/o, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/b, _, middle-middle/x, _, bottom-left/o, bottom-middle/b, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/b, _, middle-middle/x, _, bottom-left/o, bottom-middle/x, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/o, _, middle-middle/x, middle-right/b, bottom-left/x, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/o, middle-left/b, middle-middle/x, middle-right/b, bottom-left/o, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/o, middle-left/x, middle-middle/x, middle-right/b, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/o, _, middle-middle/x, middle-right/b, bottom-left/b, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/o, _, middle-middle/x, middle-right/o, _, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/o, middle-left/b, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/o, middle-left/x, middle-middle/x, middle-right/x, _, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/o, middle-left/o, middle-middle/x, middle-right/x, bottom-left/o, _, bottom-right/o]).
branch(negative, [top-left/x, _, top-right/o, middle-left/o, middle-middle/x, middle-right/x, bottom-left/x, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/x, _, middle-middle/x, _, bottom-left/b, _, bottom-right/o]).
branch(positive, [top-left/x, _, top-right/x, _, middle-middle/x, _, bottom-left/x, _, bottom-right/o]).
branch(negative, [top-left/x, top-middle/b, top-right/x, _, middle-middle/x, _, bottom-left/o, _, bottom-right/o]).
branch(negative, [top-left/x, top-middle/o, top-right/x, _, middle-middle/x, _, bottom-left/o, _, bottom-right/o]).
branch(positive, [top-left/x, top-middle/x, top-right/x, _, middle-middle/x, _, bottom-left/o, _, bottom-right/o]).
